{"ast":null,"code":"import _slicedToArray from \"F:\\\\React Js\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\React Js\\\\my-app\\\\src\\\\components\\\\TextForms.js\";\nimport React, { useState } from 'react';\nfunction TextForms(props) {\n  var handleUpText = function handleUpText() {\n    // console.log(\"handleUpText\");\n    var newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Data is converted to UpperCase\", 'success');\n  };\n  var handleLowerText = function handleLowerText() {\n    // console.log(\"handleUpText\");\n    var newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Data is converted to LowerCase\", 'success');\n  };\n  var handleClearText = function handleClearText() {\n    // console.log(\"handleUpText\");\n    var newText = '';\n    setText(newText);\n  };\n  var handleChangeText = function handleChangeText(event) {\n    // console.log(\"ON Change\");\n    setText(event.target.value);\n  };\n  var copyText = function copyText() {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n  };\n  var handleExtraSpaces = function handleExtraSpaces() {\n    var newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n  };\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var textLength = text.trim().split(/[ ]+/).length;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      color: props.mode === 'light' ? 'black' : 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"myBox\",\n    rows: \"3\",\n    value: text,\n    onChange: handleChangeText,\n    style: {\n      backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n      color: props.mode === 'light' ? 'black' : 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary my-2\",\n    onClick: handleUpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Convert to UpperCase\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary my-2 mx-2\",\n    onClick: handleLowerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Convert to LowerCase\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary my-2 mx-2\",\n    onClick: handleClearText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Clear Text\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary my-2 mx-2\",\n    onClick: copyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Copy Text\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary my-2 mx-2\",\n    onClick: handleExtraSpaces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Remove Extra Spaces\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Your Text Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"words \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }, textLength), \" and character \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 52\n    }\n  }, text.length)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, 0.008 * textLength, \" In Mintues Read\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, textLength > 1 ? text : 'Enter something into the TextArea'))));\n}\nexport default TextForms;","map":{"version":3,"names":["React","useState","TextForms","props","handleUpText","newText","text","toUpperCase","setText","showAlert","handleLowerText","toLowerCase","handleClearText","handleChangeText","event","target","value","copyText","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","split","join","textLength","trim","length","color","mode","heading","backgroundColor"],"sources":["F:/React Js/my-app/src/components/TextForms.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TextForms(props) {\r\n   const handleUpText=()=>{\r\n        // console.log(\"handleUpText\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Data is converted to UpperCase\",'success')\r\n    }\r\n    const handleLowerText=()=>{\r\n        // console.log(\"handleUpText\");\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Data is converted to LowerCase\",'success')\r\n    }\r\n    const handleClearText=()=>{\r\n        // console.log(\"handleUpText\");\r\n        let newText='';\r\n        setText(newText)\r\n    }\r\n    const handleChangeText=(event)=>{\r\n        // console.log(\"ON Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const copyText=()=>{\r\n        let text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n    }\r\n    const [text, setText] = useState('');\r\n    \r\n    let textLength=text.trim().split(/[ ]+/).length ;\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='light'?'black':'white'}}>\r\n    <div className=\"container\" >\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"3\"  value={text}  onChange={handleChangeText}  style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='light'?'black':'white'}}  ></textarea>\r\n        <button type=\"button\" className=\"btn btn-primary my-2\" onClick={handleUpText}>Convert to UpperCase</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleLowerText}>Convert to LowerCase</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleClearText}>Clear Text</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={copyText}>Copy Text</button>\r\n        <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h2>Your Text Summary</h2>\r\n        <p>words <b>{textLength}</b> and character <b>{text.length}</b></p>\r\n        <p>{(0.008*textLength)} In Mintues Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{textLength>1?text:'Enter something into the TextArea'}</p>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextForms;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}