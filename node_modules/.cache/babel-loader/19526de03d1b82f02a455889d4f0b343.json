{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Js\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./componen/ts/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForms from \"./components/TextForms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [modeTextColor, setmodeTextColor] = useState(\"dark\");\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      typ: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setmodeTextColor(\"light\");\n      document.body.style.backgroundColor = \"#2c4258\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n    } else {\n      setMode(\"light\");\n      setmodeTextColor(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enable\", \"success\");\n    }\n  };\n  // const name=\"Rahul Rathore\"\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About us\",\n      mode: mode,\n      toggleMode: toggleMode,\n      modeTextColor: modeTextColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForms, {\n        heading: \"Enter the text to Analyse\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"5BalcwHGLPw02MzF3Bm+IdT9LPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","Navbar","TextForms","App","modeTextColor","setmodeTextColor","mode","setMode","alert","setAlert","showAlert","messege","type","msg","typ","toggleMode","document","body","style","backgroundColor"],"sources":["F:/React Js/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./componen/ts/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForms from \"./components/TextForms\";\n\nfunction App() {\n  const [modeTextColor, setmodeTextColor] = useState(\"dark\");\n  const [mode, setMode] = useState(\"light\");\n  const [alert,setAlert]=useState(null)\n\n  const showAlert=(messege,type)=>{\n\n    setAlert({\n      msg:messege,\n      typ:type\n    })\n\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setmodeTextColor(\"light\");\n      document.body.style.backgroundColor = \"#2c4258\";\n      showAlert(\"Dark mode has been enable\",\"success\")\n    } else {\n      setMode(\"light\");\n      setmodeTextColor(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enable\",\"success\")\n    }\n  };\n  // const name=\"Rahul Rathore\"\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About us\"\n        mode={mode}\n        toggleMode={toggleMode}\n        modeTextColor={modeTextColor}\n      ></Navbar>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForms heading=\"Enter the text to Analyse\" mode={mode} />\n        {/* <About mode={mode}/> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB;AACA,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAAA;AAE/C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,MAAM,CAAC;EAC1D,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAMW,SAAS,GAAC,CAACC,OAAO,EAACC,IAAI,KAAG;IAE9BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXG,GAAG,EAACF;IACN,CAAC,CAAC;EAEJ,CAAC;EACD,MAAMG,UAAU,GAAG,MAAM;IACvB,IAAIT,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfF,gBAAgB,CAAC,OAAO,CAAC;MACzBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,2BAA2B,EAAC,SAAS,CAAC;IAClD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBF,gBAAgB,CAAC,MAAM,CAAC;MACxBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD;EACF,CAAC;EACD;EACA,oBACE;IAAA,wBACE,QAAC,MAAM;MACL,KAAK,EAAC,WAAW;MACjB,SAAS,EAAC,UAAU;MACpB,IAAI,EAAEJ,IAAK;MACX,UAAU,EAAES,UAAW;MACvB,aAAa,EAAEX;IAAc;MAAA;MAAA;MAAA;IAAA,QACrB,eACV,QAAC,KAAK;MAAC,KAAK,EAAEI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC7B,QAAC,SAAS;QAAC,OAAO,EAAC,2BAA2B;QAAC,IAAI,EAAEF;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAEzD;EAAA,gBACL;AAEP;AAAC,GA3CQH,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}